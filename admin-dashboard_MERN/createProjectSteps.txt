started on SERVER = added dependencies

index.js (main/root) added imports and configs + added some routes + added routes dir with the 4 routes

added general setup/skeleton and imports for the routes files + added controllers, data, models directories + skeleton files for controller folder

setting up mongoDB - added .env + mongoose setup in index.js TESTED DB connected OK

CLIENT/FE - added dependency packages

CLIENT --> created jsconfig.json + src/theme.js files (completed both) + added fonts/default css to index.css src/[assets, components, scenes, state] dits + cleaned up default create react files ++ SERVER added /data/index.js with data for the app + /models folder added

CLIENT - /src/state/index.js -->setting up redux & redux toolkit so light/dark mode from themes can be stored in state + configured & added redux provider to root index.js

CLIENT App.js --> imported ThemeProvider to wrap + created routes (+ added folders for src/scenes folders with index.js files for components for those routes - worked on some of the scenes folder (dashboard, layout) + created components/FlexBetween.jsx (styled component - made Box for mui components custom Flex) + completed component/Navbar.jsx
scenes:
layout/index.js =  added some imports, plus started layout adding Navbar and Outlet
dashboard/index.js = skeleton setup

CLIENT: 
Sidebar component: set imports, created array for all icons to map over 
Added Sidebar component in layout.jsx + added state to check if open + bool to check screen size of device to set responsive layout (useMediaQuery hook) - completed Sidebar menu structure
imp-<Drawer> sidebar component https://mui.com/material-ui/react-drawer/

Getting user info --> send req with user id to BE so it response with info about user (without auth for now so set up initial state on FE with user id)
Connect to BE - completed router for User in server/routes/general.js and the function for it in server/controllers/general.js (only added User as only done that schema for now) + need to set up schema in server/models/User.js 
+ inject user data array from data/index.js (dataUser) ==> import model and data into server/index.js + inside mongoose.connect User.insertMany(dataUser) - TESTED - data inserted into DB OK! (some issues with navbar UI *need to fix)
